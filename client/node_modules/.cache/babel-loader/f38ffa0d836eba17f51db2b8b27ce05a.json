{"ast":null,"code":"import { GET_USER_DATA } from './actionTypes';\nimport CryptoJS from 'crypto-js';\nimport axios from 'axios';\nexport default function getDataUser() {\n  return async dispatch => {\n    console.log(\"getDataUser\");\n    const secret = localStorage.getItem(\"secret\");\n    const token = localStorage.getItem(\"token\");\n    const email = localStorage.getItem(\"email\");\n    const IP = localStorage.getItem(\"IP\");\n    const ciphertextTOKEN = CryptoJS.AES.encrypt(token, secret).toString();\n    const ciphertextEMAIL = CryptoJS.AES.encrypt(email, secret).toString();\n    console.log(IP);\n    let url = 'http://localhost:8888/getDataUser';\n    const data = {\n      \"IP\": IP,\n      \"email\": ciphertextEMAIL,\n      \"token\": ciphertextTOKEN\n    };\n    let body = JSON.stringify(data);\n    axios({\n      method: 'post',\n      url: url,\n      data: body\n    }).then(response => {\n      console.log(\"getDataUsersResponse\", response);\n      const responseParse = response;\n      dispatch(getSuccess(responseParse.data.id, responseParse.data.email));\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n}\nexport function getSuccess(id, email) {\n  console.log(\"getSuccess\");\n  return {\n    type: GET_USER_DATA,\n    id,\n    email\n  };\n}\nexport function getStart(params) {\n  return {\n    type: GET_USER_DATA_START,\n    loading: true\n  };\n}","map":{"version":3,"sources":["/home/gleban/WORKS/messnger_project/client/src/store/actions/getDataUser.js"],"names":["GET_USER_DATA","CryptoJS","axios","getDataUser","dispatch","console","log","secret","localStorage","getItem","token","email","IP","ciphertextTOKEN","AES","encrypt","toString","ciphertextEMAIL","url","data","body","JSON","stringify","method","then","response","responseParse","getSuccess","id","catch","error","type","getStart","params","GET_USER_DATA_START","loading"],"mappings":"AAAA,SAASA,aAAT,QAA8B,eAA9B;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAGA,eAAe,SAASC,WAAT,GAAuB;AAClC,SAAO,MAAMC,QAAN,IAAkB;AACrBC,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACA,UAAMC,MAAM,GAAGC,YAAY,CAACC,OAAb,CAAqB,QAArB,CAAf;AACA,UAAMC,KAAK,GAAGF,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AACA,UAAME,KAAK,GAAGH,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AACA,UAAMG,EAAE,GAAGJ,YAAY,CAACC,OAAb,CAAqB,IAArB,CAAX;AAEA,UAAMI,eAAe,GAAGZ,QAAQ,CAACa,GAAT,CAAaC,OAAb,CAAqBL,KAArB,EAA4BH,MAA5B,EAAoCS,QAApC,EAAxB;AACA,UAAMC,eAAe,GAAGhB,QAAQ,CAACa,GAAT,CAAaC,OAAb,CAAqBJ,KAArB,EAA4BJ,MAA5B,EAAoCS,QAApC,EAAxB;AACAX,IAAAA,OAAO,CAACC,GAAR,CAAYM,EAAZ;AAEA,QAAIM,GAAG,GAAG,mCAAV;AAEA,UAAMC,IAAI,GAAG;AACT,YAAMP,EADG;AAET,eAASK,eAFA;AAGT,eAASJ;AAHA,KAAb;AAKA,QAAIO,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAeH,IAAf,CAAX;AAEAjB,IAAAA,KAAK,CAAC;AACNqB,MAAAA,MAAM,EAAE,MADF;AAENL,MAAAA,GAAG,EAAEA,GAFC;AAGNC,MAAAA,IAAI,EAAEC;AAHA,KAAD,CAAL,CAIGI,IAJH,CAISC,QAAD,IAAc;AAClBpB,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCmB,QAApC;AACA,YAAMC,aAAa,GAAGD,QAAtB;AACArB,MAAAA,QAAQ,CAACuB,UAAU,CAACD,aAAa,CAACP,IAAd,CAAmBS,EAApB,EAAwBF,aAAa,CAACP,IAAd,CAAmBR,KAA3C,CAAX,CAAR;AAEH,KATD,EAUCkB,KAVD,CAUO,UAAUC,KAAV,EAAiB;AACpBzB,MAAAA,OAAO,CAACC,GAAR,CAAYwB,KAAZ;AACH,KAZD;AAaH,GAjCD;AAkCH;AAED,OAAO,SAASH,UAAT,CAAoBC,EAApB,EAAwBjB,KAAxB,EAA+B;AAClCN,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACA,SAAO;AACHyB,IAAAA,IAAI,EAAE/B,aADH;AAEH4B,IAAAA,EAFG;AAGHjB,IAAAA;AAHG,GAAP;AAMH;AAED,OAAO,SAASqB,QAAT,CAAkBC,MAAlB,EAA0B;AAC7B,SAAO;AACHF,IAAAA,IAAI,EAAEG,mBADH;AAEHC,IAAAA,OAAO,EAAE;AAFN,GAAP;AAIH","sourcesContent":["import { GET_USER_DATA } from './actionTypes'\nimport CryptoJS from 'crypto-js';\nimport axios from 'axios'\n\n\nexport default function getDataUser() {\n    return async dispatch => {  \n        console.log(\"getDataUser\")\n        const secret = localStorage.getItem(\"secret\");\n        const token = localStorage.getItem(\"token\")\n        const email = localStorage.getItem(\"email\")\n        const IP = localStorage.getItem(\"IP\");\n\n        const ciphertextTOKEN = CryptoJS.AES.encrypt(token, secret).toString();\n        const ciphertextEMAIL = CryptoJS.AES.encrypt(email, secret).toString();\n        console.log(IP)\n\n        let url = 'http://localhost:8888/getDataUser'\n\n        const data = {\n            \"IP\": IP,\n            \"email\": ciphertextEMAIL,\n            \"token\": ciphertextTOKEN \n        }\n        let body = JSON.stringify(data);\n        \n        axios({\n        method: 'post',\n        url: url,\n        data: body,\n        }).then((response) => {\n            console.log(\"getDataUsersResponse\", response);\n            const responseParse = response\n            dispatch(getSuccess(responseParse.data.id, responseParse.data.email))\n\n        })\n        .catch(function (error) {\n            console.log(error);\n        });\n    }\n}\n\nexport function getSuccess(id, email) {\n    console.log(\"getSuccess\")\n    return {\n        type: GET_USER_DATA,\n        id,\n        email\n        \n    }\n}\n\nexport function getStart(params) {\n    return {\n        type: GET_USER_DATA_START,\n        loading: true    \n    }\n}\n"]},"metadata":{},"sourceType":"module"}