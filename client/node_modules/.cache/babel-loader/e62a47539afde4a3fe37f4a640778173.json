{"ast":null,"code":"import { CONNECT_TO_SOCKET } from './actionTypes';\nimport socketIOClient from \"socket.io-client\";\nimport crypto from 'crypto';\nexport default function connectToSocket() {\n  return dispatch => {\n    const socket = socketIOClient(\"localhost:8000\");\n    const data = {\n      id: localStorage.getItem('id'),\n      numberRoom: localStorage.getItem('id')\n    };\n    console.log(\"socket\", socket.id);\n    socket.on(\"connect\", socket => {});\n    socket.on(\"DH_response\", dataRes => {\n      console.log(\"qwqqqqqqqqqqqqqqqqqqqqqqq\", dataRes);\n      console.log(dataRes.prime);\n      let client = crypto.createDiffieHellman(dataRes.prime, dataRes.generator); //DHEndData = {\n      //}\n    });\n    socket.emit('join', {\n      numberRoom: data.numberRoom\n    });\n    socket.emit(\"DH_begin\", data);\n    socket.emit(\"DH_end\", data);\n    console.log(\"CONNECT SOCKET\", socket);\n    dispatch(connected(socket));\n  };\n}\nexport function connected(socket) {\n  return {\n    type: CONNECT_TO_SOCKET,\n    socket\n  };\n}","map":{"version":3,"sources":["/home/gleban/WORKS/messnger_project/client/src/store/actions/connectToSocket.js"],"names":["CONNECT_TO_SOCKET","socketIOClient","crypto","connectToSocket","dispatch","socket","data","id","localStorage","getItem","numberRoom","console","log","on","dataRes","prime","client","createDiffieHellman","generator","emit","connected","type"],"mappings":"AAAA,SAASA,iBAAT,QAAkC,eAAlC;AAEA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,MAAP,MAAmB,QAAnB;AAGA,eAAe,SAASC,eAAT,GAA2B;AACtC,SAAOC,QAAQ,IAAI;AACf,UAAMC,MAAM,GAAGJ,cAAc,CAAC,gBAAD,CAA7B;AACA,UAAMK,IAAI,GAAE;AACRC,MAAAA,EAAE,EAAEC,YAAY,CAACC,OAAb,CAAqB,IAArB,CADI;AAERC,MAAAA,UAAU,EAAEF,YAAY,CAACC,OAAb,CAAqB,IAArB;AAFJ,KAAZ;AAIAE,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBP,MAAM,CAACE,EAA7B;AAEAF,IAAAA,MAAM,CAACQ,EAAP,CAAU,SAAV,EAAsBR,MAAD,IAAY,CAChC,CADD;AAIAA,IAAAA,MAAM,CAACQ,EAAP,CAAU,aAAV,EAAyBC,OAAO,IAAI;AAChCH,MAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAyCE,OAAzC;AACAH,MAAAA,OAAO,CAACC,GAAR,CAAYE,OAAO,CAACC,KAApB;AACA,UAAIC,MAAM,GAAGd,MAAM,CAACe,mBAAP,CAA2BH,OAAO,CAACC,KAAnC,EAA0CD,OAAO,CAACI,SAAlD,CAAb,CAHgC,CAIhC;AAEA;AACH,KAPD;AAQAb,IAAAA,MAAM,CAACc,IAAP,CAAY,MAAZ,EAAoB;AAACT,MAAAA,UAAU,EAAEJ,IAAI,CAACI;AAAlB,KAApB;AACAL,IAAAA,MAAM,CAACc,IAAP,CAAY,UAAZ,EAAwBb,IAAxB;AACAD,IAAAA,MAAM,CAACc,IAAP,CAAY,QAAZ,EAAsBb,IAAtB;AAGAK,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BP,MAA9B;AACAD,IAAAA,QAAQ,CAACgB,SAAS,CAACf,MAAD,CAAV,CAAR;AACH,GA3BD;AA6BH;AAED,OAAO,SAASe,SAAT,CAAmBf,MAAnB,EAA2B;AAC9B,SAAO;AACHgB,IAAAA,IAAI,EAAErB,iBADH;AAEHK,IAAAA;AAFG,GAAP;AAIH","sourcesContent":["import { CONNECT_TO_SOCKET } from './actionTypes'\n\nimport socketIOClient from \"socket.io-client\";\nimport crypto from 'crypto'\n\n\nexport default function connectToSocket() {\n    return dispatch => {\n        const socket = socketIOClient(\"localhost:8000\");\n        const data ={ \n            id: localStorage.getItem('id'),\n            numberRoom: localStorage.getItem('id')\n        }\n        console.log(\"socket\", socket.id)\n        \n        socket.on(\"connect\", (socket) => {\n        });\n       \n        \n        socket.on(\"DH_response\", dataRes => {\n            console.log(\"qwqqqqqqqqqqqqqqqqqqqqqqq\", dataRes)\n            console.log(dataRes.prime)\n            let client = crypto.createDiffieHellman(dataRes.prime, dataRes.generator) \n            //DHEndData = {\n\n            //}\n        })\n        socket.emit('join', {numberRoom: data.numberRoom});\n        socket.emit(\"DH_begin\", data);\n        socket.emit(\"DH_end\", data);\n\n        \n        console.log(\"CONNECT SOCKET\", socket)\n        dispatch(connected(socket))\n    }\n    \n}\n\nexport function connected(socket) {\n    return {\n        type: CONNECT_TO_SOCKET,\n        socket\n    }\n}"]},"metadata":{},"sourceType":"module"}