{"ast":null,"code":"import { GET_ALL_USER, GET_ALL_USER_START } from './actionTypes';\nimport CryptoJS from 'crypto-js';\nimport axios from 'axios';\nexport default function getDataUser() {\n  return async dispatch => {\n    console.log(\"getDataUser\");\n    dispatch(getStart());\n    const secret = localStorage.getItem(\"secret\");\n    const token = localStorage.getItem(\"token\");\n    const email = localStorage.getItem(\"email\");\n    const IP = localStorage.getItem(\"IP\");\n    const ciphertextTOKEN = CryptoJS.AES.encrypt(token, secret).toString();\n    const ciphertextEMAIL = CryptoJS.AES.encrypt(email, secret).toString();\n    console.log(IP);\n    let url = 'http://localhost:8888/getAllUsers';\n    const data = {\n      \"IP\": IP,\n      \"email\": ciphertextEMAIL,\n      \"token\": ciphertextTOKEN\n    };\n    let body = JSON.stringify(data);\n    axios({\n      method: 'post',\n      url: url,\n      data: body\n    }).then(response => {\n      console.log(\"getAllUsersResponse\", response);\n      const responseParse = response;\n      dispatch(getSuccess(response.data.users));\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n}\nexport function getSuccess(users) {\n  console.log(\"getUsersSuccess\");\n  return {\n    type: GET_ALL_USER,\n    users\n  };\n}\nexport function getStart() {\n  return {\n    type: GET_ALL_USER_START,\n    loading: true\n  };\n}","map":{"version":3,"sources":["/home/gleban/WORKS/messnger_project/client/src/store/actions/getAllUsers.js"],"names":["GET_ALL_USER","GET_ALL_USER_START","CryptoJS","axios","getDataUser","dispatch","console","log","getStart","secret","localStorage","getItem","token","email","IP","ciphertextTOKEN","AES","encrypt","toString","ciphertextEMAIL","url","data","body","JSON","stringify","method","then","response","responseParse","getSuccess","users","catch","error","type","loading"],"mappings":"AAAA,SAASA,YAAT,EAAuBC,kBAAvB,QAAgD,eAAhD;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAGA,eAAe,SAASC,WAAT,GAAuB;AAClC,SAAO,MAAMC,QAAN,IAAkB;AACrBC,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACAF,IAAAA,QAAQ,CAACG,QAAQ,EAAT,CAAR;AACA,UAAMC,MAAM,GAAGC,YAAY,CAACC,OAAb,CAAqB,QAArB,CAAf;AACA,UAAMC,KAAK,GAAGF,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AACA,UAAME,KAAK,GAAGH,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AACA,UAAMG,EAAE,GAAGJ,YAAY,CAACC,OAAb,CAAqB,IAArB,CAAX;AAEA,UAAMI,eAAe,GAAGb,QAAQ,CAACc,GAAT,CAAaC,OAAb,CAAqBL,KAArB,EAA4BH,MAA5B,EAAoCS,QAApC,EAAxB;AACA,UAAMC,eAAe,GAAGjB,QAAQ,CAACc,GAAT,CAAaC,OAAb,CAAqBJ,KAArB,EAA4BJ,MAA5B,EAAoCS,QAApC,EAAxB;AACAZ,IAAAA,OAAO,CAACC,GAAR,CAAYO,EAAZ;AAEA,QAAIM,GAAG,GAAG,mCAAV;AAEA,UAAMC,IAAI,GAAG;AACT,YAAMP,EADG;AAET,eAASK,eAFA;AAGT,eAASJ;AAHA,KAAb;AAKA,QAAIO,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAeH,IAAf,CAAX;AAEAlB,IAAAA,KAAK,CAAC;AACNsB,MAAAA,MAAM,EAAE,MADF;AAENL,MAAAA,GAAG,EAAEA,GAFC;AAGNC,MAAAA,IAAI,EAAEC;AAHA,KAAD,CAAL,CAIGI,IAJH,CAISC,QAAD,IAAc;AAClBrB,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCoB,QAAnC;AACA,YAAMC,aAAa,GAAGD,QAAtB;AAEAtB,MAAAA,QAAQ,CAACwB,UAAU,CAACF,QAAQ,CAACN,IAAT,CAAcS,KAAf,CAAX,CAAR;AACH,KATD,EAUCC,KAVD,CAUO,UAAUC,KAAV,EAAiB;AACpB1B,MAAAA,OAAO,CAACC,GAAR,CAAYyB,KAAZ;AACH,KAZD;AAaH,GAlCD;AAmCH;AAED,OAAO,SAASH,UAAT,CAAoBC,KAApB,EAA2B;AAC9BxB,EAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACA,SAAO;AACH0B,IAAAA,IAAI,EAAEjC,YADH;AAEH8B,IAAAA;AAFG,GAAP;AAIH;AAED,OAAO,SAAStB,QAAT,GAAoB;AACvB,SAAO;AACHyB,IAAAA,IAAI,EAAEhC,kBADH;AAEHiC,IAAAA,OAAO,EAAE;AAFN,GAAP;AAIH","sourcesContent":["import { GET_ALL_USER, GET_ALL_USER_START} from './actionTypes'\nimport CryptoJS from 'crypto-js';\nimport axios from 'axios'\n\n\nexport default function getDataUser() {\n    return async dispatch => {  \n        console.log(\"getDataUser\")\n        dispatch(getStart())\n        const secret = localStorage.getItem(\"secret\");\n        const token = localStorage.getItem(\"token\")\n        const email = localStorage.getItem(\"email\")\n        const IP = localStorage.getItem(\"IP\");\n\n        const ciphertextTOKEN = CryptoJS.AES.encrypt(token, secret).toString();\n        const ciphertextEMAIL = CryptoJS.AES.encrypt(email, secret).toString();\n        console.log(IP)\n\n        let url = 'http://localhost:8888/getAllUsers'\n\n        const data = {\n            \"IP\": IP,\n            \"email\": ciphertextEMAIL,\n            \"token\": ciphertextTOKEN \n        }\n        let body = JSON.stringify(data);\n        \n        axios({\n        method: 'post',\n        url: url,\n        data: body,\n        }).then((response) => {\n            console.log(\"getAllUsersResponse\", response);\n            const responseParse = response;\n\n            dispatch(getSuccess(response.data.users));\n        })\n        .catch(function (error) {\n            console.log(error);\n        });\n    }\n}\n\nexport function getSuccess(users) {\n    console.log(\"getUsersSuccess\")\n    return {\n        type: GET_ALL_USER,\n        users\n    }\n}\n\nexport function getStart() {\n    return {\n        type: GET_ALL_USER_START,\n        loading: true    \n    }\n}\n"]},"metadata":{},"sourceType":"module"}