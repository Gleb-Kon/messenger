{"ast":null,"code":"var _jsxFileName = \"/home/gleban/WORKS/messnger_project/client/src/containers/HomePage/HomePage.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport socketIOClient from \"socket.io-client\";\nimport getDataUser from '../../store/actions/getDataUser';\nimport getAllUsers from '../../store/actions/getAllUsers';\nimport connectToSocket from '../../store/actions/connectToSocket';\nimport MainFunctionBar from '../../component/MainFunctionBar/MainFunctionBar';\nimport classes from './HomePage.module.css';\nimport Button from '../../component/Button/Button';\nimport Input from '../../component/Input/Input';\n\nclass HomePage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.buttonSelected = selectedButton => ev => {\n      this.setState({\n        selectedButton\n      });\n    };\n\n    this.state = {\n      message: \"\",\n      messages: [],\n      selectedButton: null\n    };\n    this.connectRoom = this.connectRoom.bind(this);\n    this.sendMessage = this.sendMessage.bind(this);\n    this.onChange = this.onChange.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.getDataUser();\n    this.props.getAllUsers();\n    this.props.connectToSocket();\n    console.log(this.props.loading);\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n  }\n\n  renderUsers() {\n    return this.props.users.map(user => {\n      return React.createElement(\"li\", {\n        key: user.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, user.email, React.createElement(Button, {\n        key: user.id,\n        onClick: this.connectRoom.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, \"\\u041D\\u0430\\u043F\\u0438\\u0441\\u0430\\u0442\\u044C\"));\n    });\n  }\n\n  renderMessages() {\n    return this.state.messages.map(message => {\n      return React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, message);\n    });\n  }\n\n  connectRoom(obj) {\n    console.log(obj);\n    this.props.socket.emit('join', {\n      email: \"1234\"\n    });\n    this.props.socket.on(\"new_message\", msg => {\n      console.log(msg);\n      this.setState({\n        messages: [...this.state.messages, msg]\n      });\n      console.log(this.state.messages);\n    });\n  }\n\n  sendMessage() {\n    const message = this.state.message;\n    console.log();\n    this.props.socket.emit('message', message);\n  }\n\n  onChange(e) {\n    var val = e.target.value;\n    this.setState({\n      message: val\n    });\n  }\n\n  render() {\n    console.log(this.props.email);\n    console.log(this.props.loading);\n\n    if (this.props.loadingData && this.props.loadingUsers) {\n      return React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, \"\\u0437\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430\");\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.leftSideBar,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(MainFunctionBar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, \"\\u0412\\u044B \\u0432\\u043E\\u0448\\u043B\\u0438 \\u043A\\u0430\\u043A: \", this.props.email, \" \"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, \"\\u0412\\u0430\\u0448 id: \", this.props.id), React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, \"\\u0423\\u0436\\u0435 \\u0437\\u0430\\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0438\\u0440\\u043E\\u0432\\u0430\\u043B\\u0438\\u0441\\u044C!!!\"), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, this.renderUsers()), React.createElement(Input, {\n        value: this.state.name,\n        onChange: this.onChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }), React.createElement(Button, {\n        onClick: this.sendMessage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, this.renderMessages())))));\n    }\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    id: state.getDataUser.id,\n    email: state.getDataUser.email,\n    loadingData: state.getDataUser.loading,\n    users: state.getAllUsers.users,\n    loadingUsers: state.getAllUsers.loading,\n    socket: state.connectToSocket.socket\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    getDataUser: () => dispatch(getDataUser()),\n    getAllUsers: () => dispatch(getAllUsers()),\n    connectToSocket: () => dispatch(connectToSocket())\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePage);","map":{"version":3,"sources":["/home/gleban/WORKS/messnger_project/client/src/containers/HomePage/HomePage.js"],"names":["React","Component","connect","socketIOClient","getDataUser","getAllUsers","connectToSocket","MainFunctionBar","classes","Button","Input","HomePage","constructor","props","buttonSelected","selectedButton","ev","setState","state","message","messages","connectRoom","bind","sendMessage","onChange","componentDidMount","console","log","loading","handleSubmit","e","preventDefault","renderUsers","users","map","user","id","email","renderMessages","obj","socket","emit","on","msg","val","target","value","render","loadingData","loadingUsers","leftSideBar","name","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport { connect } from 'react-redux';\n\nimport socketIOClient from \"socket.io-client\";\nimport getDataUser from  '../../store/actions/getDataUser'\nimport getAllUsers from  '../../store/actions/getAllUsers'\nimport connectToSocket from  '../../store/actions/connectToSocket'\nimport MainFunctionBar from '../../component/MainFunctionBar/MainFunctionBar'\nimport classes from './HomePage.module.css'\nimport Button from '../../component/Button/Button'\nimport Input from '../../component/Input/Input'\n\nclass HomePage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            message: \"\",\n            messages: [],\n            selectedButton: null\n\n        };\n        this.connectRoom = this.connectRoom.bind(this);\n        this.sendMessage = this.sendMessage.bind(this);\n        this.onChange = this.onChange.bind(this)\n    }\n    \n      \n    componentDidMount(){\n        this.props.getDataUser();\n        this.props.getAllUsers();\n        this.props.connectToSocket();\n\n        console.log(this.props.loading)\n        \n    }\n    handleSubmit(e) {\n        e.preventDefault();\n    }\n    renderUsers() {\n        return this.props.users.map(user => {\n            return(\n                <li key={user.id}>{user.email}\n                <Button\n                    key={user.id}\n                    onClick={this.connectRoom.bind(this)}\n                    >\n                Написать\n                </Button>\n                </li>\n            )\n        })\n    }\n\n    renderMessages() {\n        return this.state.messages.map(message => {\n            return(\n                <li>{message}</li>\n            )\n        })\n        \n        \n    }\n    buttonSelected = selectedButton => ev => {\n        this.setState({ selectedButton })\n    }\n    connectRoom(obj) {\n\n        console.log(obj)\n\n        this.props.socket.emit('join', {email: \"1234\"});\n        this.props.socket.on(\"new_message\", (msg) => {\n            console.log(msg)\n            this.setState({messages: [...this.state.messages, msg]});\n            console.log(this.state.messages)\n        })\n\n    }\n    sendMessage() {\n        const message = this.state.message;\n        console.log()\n        this.props.socket.emit('message', message)\n    }\n    onChange(e) {\n        var val = e.target.value;\n        this.setState({message: val});\n    }\n    \n    render() {\n        console.log(this.props.email)\n\n        console.log(this.props.loading)\n        if(this.props.loadingData && this.props.loadingUsers) {\n            return (<h1>загрузка</h1>)\n        }\n        else{\n        return(\n            <div>\n                <div>\n                    <div className={classes.leftSideBar}>\n                        <MainFunctionBar/>\n                    </div >\n                    <div>\n                    <span>Вы вошли как: {this.props.email} </span><br/>\n                    <span>Ваш id: {this.props.id}</span>\n                    <h1>Уже зарегистрировались!!!</h1>\n                    <ul>{this.renderUsers()}</ul>\n                    <Input\n                        value={this.state.name}\n                        onChange={this.onChange}\n\n                    ></Input>\n                    <Button\n                        onClick={this.sendMessage}\n                    >Отправить</Button>\n                    <div>\n                        <ul>\n                            {this.renderMessages()}\n                        </ul>\n                    </div>\n                    </div>  \n                </div>\n            </div>\n        )\n    }\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        id: state.getDataUser.id,\n        email: state.getDataUser.email,\n        loadingData: state.getDataUser.loading,\n\n        users: state.getAllUsers.users,\n        loadingUsers: state.getAllUsers.loading,\n\n        socket: state.connectToSocket.socket\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return { \n      getDataUser: () => dispatch(getDataUser()),\n      getAllUsers: () => dispatch(getAllUsers()),\n      connectToSocket: () => dispatch(connectToSocket())\n    }\n}\n  \nexport default connect(mapStateToProps, mapDispatchToProps)(HomePage);\n"]},"metadata":{},"sourceType":"module"}