{"ast":null,"code":"import _objectSpread from \"/home/gleban/WORKS/messnger_project/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/home/gleban/WORKS/messnger_project/client/src/containers/HomePage/HomePage.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport socketIOClient from \"socket.io-client\";\nimport getDataUser from '../../store/actions/getDataUser';\nimport getAllUsers from '../../store/actions/getAllUsers';\nimport connectToSocket from '../../store/actions/connectToSocket';\nimport MainFunctionBar from '../../component/MainFunctionBar/MainFunctionBar';\nimport classes from './HomePage.module.css';\nimport Button from '../../component/Button/Button';\nimport Input from '../../component/Input/Input';\n\nclass HomePage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      formControls: {\n        email: {\n          value: '',\n          type: 'message'\n        }\n      }\n    };\n\n    this.onChangeHandler = (event, controlName) => {\n      const formControls = _objectSpread({}, this.state.formControls);\n\n      const control = _objectSpread({}, formControls[controlName]);\n\n      control.value = event.target.value;\n      formControls[controlName] = control;\n      this.setState({\n        formControls\n      });\n    };\n\n    this.connectRoom = this.connectRoom.bind(this);\n    this.sendMessage = this.sendMessage.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.getDataUser();\n    this.props.getAllUsers();\n    this.props.connectToSocket();\n    console.log(this.props.loading);\n  }\n\n  renderUsers() {\n    return this.props.users.map(user => {\n      return React.createElement(\"li\", {\n        key: user.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, user.email, React.createElement(Button, {\n        onClick: this.connectRoom,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, \"\\u041D\\u0430\\u043F\\u0438\\u0441\\u0430\\u0442\\u044C\"));\n    });\n  }\n\n  connectRoom() {\n    this.props.socket.emit('join', {\n      email: \"1234\"\n    });\n    this.props.socket.on(\"new_message\", msg => {\n      console.log(msg);\n    });\n  }\n\n  sendMessage() {\n    const message = this.state.formControls.message.value;\n    console.log();\n    this.props.socket.emit('message', message);\n  }\n\n  render() {\n    console.log(this.props.email);\n    console.log(this.props.loading);\n\n    if (this.props.loadingData && this.props.loadingUsers) {\n      return React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"\\u0437\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430\");\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.leftSideBar,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(MainFunctionBar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, \"\\u0412\\u044B \\u0432\\u043E\\u0448\\u043B\\u0438 \\u043A\\u0430\\u043A: \", this.props.email, \" \"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, \"\\u0412\\u0430\\u0448 id: \", this.props.id), React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \"\\u0423\\u0436\\u0435 \\u0437\\u0430\\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0438\\u0440\\u043E\\u0432\\u0430\\u043B\\u0438\\u0441\\u044C!!!\"), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, this.renderUsers()), React.createElement(Input, {\n        type: control.type,\n        value: control.value,\n        onChange: event => this.onChangeHandler(event, controlName),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }), React.createElement(Button, {\n        onClick: this.sendMessage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C\"))));\n    }\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    id: state.getDataUser.id,\n    email: state.getDataUser.email,\n    loadingData: state.getDataUser.loading,\n    users: state.getAllUsers.users,\n    loadingUsers: state.getAllUsers.loading,\n    socket: state.connectToSocket.socket\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    getDataUser: () => dispatch(getDataUser()),\n    getAllUsers: () => dispatch(getAllUsers()),\n    connectToSocket: () => dispatch(connectToSocket())\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePage);","map":{"version":3,"sources":["/home/gleban/WORKS/messnger_project/client/src/containers/HomePage/HomePage.js"],"names":["React","Component","connect","socketIOClient","getDataUser","getAllUsers","connectToSocket","MainFunctionBar","classes","Button","Input","HomePage","constructor","props","state","formControls","email","value","type","onChangeHandler","event","controlName","control","target","setState","connectRoom","bind","sendMessage","componentDidMount","console","log","loading","renderUsers","users","map","user","id","socket","emit","on","msg","message","render","loadingData","loadingUsers","leftSideBar","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport { connect } from 'react-redux';\n\nimport socketIOClient from \"socket.io-client\";\nimport getDataUser from  '../../store/actions/getDataUser'\nimport getAllUsers from  '../../store/actions/getAllUsers'\nimport connectToSocket from  '../../store/actions/connectToSocket'\nimport MainFunctionBar from '../../component/MainFunctionBar/MainFunctionBar'\nimport classes from './HomePage.module.css'\nimport Button from '../../component/Button/Button'\nimport Input from '../../component/Input/Input'\n\nclass HomePage extends Component {\n    constructor(props) {\n        super(props);\n        this.connectRoom = this.connectRoom.bind(this);\n        this.sendMessage = this.sendMessage.bind(this);\n    }\n    state = {\n        formControls: {\n          email: {\n            value: '',\n            type: 'message',\n          },\n        }\n      };\n      \n    componentDidMount(){\n        this.props.getDataUser();\n        this.props.getAllUsers();\n        this.props.connectToSocket();\n\n        console.log(this.props.loading)\n        \n    }\n    renderUsers() {\n        return this.props.users.map(user => {\n            return(\n                <li key={user.id}>{user.email}\n                <Button\n                    onClick={this.connectRoom}\n                    >\n                Написать\n                </Button>\n                </li>\n            )\n        })\n        \n        \n    }\n    connectRoom() {\n        this.props.socket.emit('join', {email: \"1234\"});\n        this.props.socket.on(\"new_message\", (msg) => {console.log(msg)})\n\n    }\n    sendMessage() {\n        const message = this.state.formControls.message.value;\n        console.log()\n        this.props.socket.emit('message', message)\n    }\n    onChangeHandler = (event, controlName) => {\n\n        const formControls = {...this.state.formControls}\n        const control = {...formControls[controlName]}\n    \n        control.value = event.target.value\n      \n        formControls[controlName] = control\n    \n        this.setState({\n          formControls\n        })\n    \n       \n      }\n    \n    render() {\n        console.log(this.props.email)\n\n        console.log(this.props.loading)\n        if(this.props.loadingData && this.props.loadingUsers) {\n            return (<h1>загрузка</h1>)\n        }\n        else{\n        return(\n            <div>\n                <div>\n                    <div className={classes.leftSideBar}>\n                        <MainFunctionBar/>\n                    </div >\n                    <div>\n                    <span>Вы вошли как: {this.props.email} </span><br/>\n                    <span>Ваш id: {this.props.id}</span>\n                    <h1>Уже зарегистрировались!!!</h1>\n                    <ul>{this.renderUsers()}</ul>\n                    <Input\n                        type={control.type}\n                        value={control.value}\n                        onChange={event => this.onChangeHandler(event, controlName)}\n\n                    ></Input>\n                    <Button\n                        onClick={this.sendMessage}\n                    >Отправить</Button>\n                    </div>  \n                </div>\n            </div>\n        )\n    }\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        id: state.getDataUser.id,\n        email: state.getDataUser.email,\n        loadingData: state.getDataUser.loading,\n\n        users: state.getAllUsers.users,\n        loadingUsers: state.getAllUsers.loading,\n\n        socket: state.connectToSocket.socket\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return { \n      getDataUser: () => dispatch(getDataUser()),\n      getAllUsers: () => dispatch(getAllUsers()),\n      connectToSocket: () => dispatch(connectToSocket())\n    }\n}\n  \nexport default connect(mapStateToProps, mapDispatchToProps)(HomePage);\n"]},"metadata":{},"sourceType":"module"}