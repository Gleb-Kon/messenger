{"ast":null,"code":"import { GET_USER_DATA } from './actionTypes';\nimport CryptoJS from 'crypto-js';\nexport function getUserData() {\n  return async dispatch => {\n    const secret = localStorage.getItem(\"secret\");\n    const token = localStorage.getItem(\"token\");\n    const IP = localStorage.getItem(\"IP\");\n    const ciphertextTOKEN = CryptoJS.AES.encrypt(token, secret).toString();\n    console.log(IP);\n    let url = 'http://localhost:8888/getUserData';\n    const authData = {\n      \"token\": ciphertextEMAIL,\n      \"IP\": IP\n    };\n    let body = JSON.stringify(authData);\n    axios({\n      method: 'post',\n      url: url,\n      data: body\n    }).then(response => {\n      console.log(response);\n      dispatch(getSuccess(response.data));\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n}\nexport function getSuccess(id, email) {\n  console.log(\"getSuccess\");\n  return {\n    type: GET_USER_DATA,\n    id,\n    email\n  };\n}","map":{"version":3,"sources":["/home/gleban/WORKS/messnger_project/client/src/store/actions/getUserData.js"],"names":["GET_USER_DATA","CryptoJS","getUserData","dispatch","secret","localStorage","getItem","token","IP","ciphertextTOKEN","AES","encrypt","toString","console","log","url","authData","ciphertextEMAIL","body","JSON","stringify","axios","method","data","then","response","getSuccess","catch","error","id","email","type"],"mappings":"AAAA,SAASA,aAAT,QAA8B,eAA9B;AACA,OAAOC,QAAP,MAAqB,WAArB;AAEA,OAAO,SAASC,WAAT,GAAuB;AAC1B,SAAO,MAAMC,QAAN,IAAkB;AACrB,UAAMC,MAAM,GAAGC,YAAY,CAACC,OAAb,CAAqB,QAArB,CAAf;AACA,UAAMC,KAAK,GAAGF,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AACA,UAAME,EAAE,GAAGH,YAAY,CAACC,OAAb,CAAqB,IAArB,CAAX;AAEA,UAAMG,eAAe,GAAGR,QAAQ,CAACS,GAAT,CAAaC,OAAb,CAAqBJ,KAArB,EAA4BH,MAA5B,EAAoCQ,QAApC,EAAxB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYN,EAAZ;AAEA,QAAIO,GAAG,GAAG,mCAAV;AAEA,UAAMC,QAAQ,GAAG;AACb,eAASC,eADI;AAEb,YAAMT;AAFO,KAAjB;AAIA,QAAIU,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAeJ,QAAf,CAAX;AAEAK,IAAAA,KAAK,CAAC;AACNC,MAAAA,MAAM,EAAE,MADF;AAENP,MAAAA,GAAG,EAAEA,GAFC;AAGNQ,MAAAA,IAAI,EAAEL;AAHA,KAAD,CAAL,CAIGM,IAJH,CAISC,QAAD,IAAc;AAClBZ,MAAAA,OAAO,CAACC,GAAR,CAAYW,QAAZ;AAEAtB,MAAAA,QAAQ,CAACuB,UAAU,CAACD,QAAQ,CAACF,IAAV,CAAX,CAAR;AAEH,KATD,EAUCI,KAVD,CAUO,UAAUC,KAAV,EAAiB;AACpBf,MAAAA,OAAO,CAACC,GAAR,CAAYc,KAAZ;AACH,KAZD;AAaH,GA7BD;AA8BH;AAED,OAAO,SAASF,UAAT,CAAoBG,EAApB,EAAwBC,KAAxB,EAA+B;AAClCjB,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACA,SAAO;AACHiB,IAAAA,IAAI,EAAE/B,aADH;AAEH6B,IAAAA,EAFG;AAGHC,IAAAA;AAHG,GAAP;AAMH","sourcesContent":["import { GET_USER_DATA } from './actionTypes'\nimport CryptoJS from 'crypto-js';\n\nexport function getUserData() {\n    return async dispatch => {  \n        const secret = localStorage.getItem(\"secret\");\n        const token = localStorage.getItem(\"token\")\n        const IP = localStorage.getItem(\"IP\");\n\n        const ciphertextTOKEN = CryptoJS.AES.encrypt(token, secret).toString();\n        console.log(IP)\n\n        let url = 'http://localhost:8888/getUserData'\n\n        const authData = {\n            \"token\": ciphertextEMAIL, \n            \"IP\": IP\n        }\n        let body = JSON.stringify(authData);\n        \n        axios({\n        method: 'post',\n        url: url,\n        data: body,\n        }).then((response) => {\n            console.log(response);\n\n            dispatch(getSuccess(response.data))\n\n        })\n        .catch(function (error) {\n            console.log(error);\n        });\n    }\n}\n\nexport function getSuccess(id, email) {\n    console.log(\"getSuccess\")\n    return {\n        type: GET_USER_DATA,\n        id,\n        email\n        \n    }\n}"]},"metadata":{},"sourceType":"module"}