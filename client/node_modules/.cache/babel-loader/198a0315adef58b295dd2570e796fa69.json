{"ast":null,"code":"var _jsxFileName = \"/home/gleban/WORKS/messnger_project/client/src/containers/Auth/Auth.js\";\nimport React, { Component } from 'react';\nimport Button from '../../component/Button/Button';\nimport Input from '../../component/Input/Input';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport { auth } from '../../store/actions/auth';\nimport classes from './auth.module.css';\n\nclass Auth extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      formControls: {\n        email: {\n          value: '',\n          type: 'email',\n          label: 'Email',\n          errorMessage: 'Input correct email',\n          valid: false,\n          touched: false,\n          validation: {\n            required: true,\n            email: true\n          }\n        },\n        password: {\n          value: '',\n          type: password,\n          label: \"Password\",\n          errorMessage: 'Inputcorrect password',\n          valid: false,\n          touched: false,\n          validation: {\n            required: true,\n            minLength: 6\n          }\n        }\n      }\n    };\n    this.config = {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    };\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.loginHandler = this.loginHandler.bind(this);\n    this.registerHandler = this.registerHandler.bind(this);\n\n    this.submitHandler = event => {\n      event.preventDefault();\n    };\n\n    this.onChangeHandler = () => {};\n  }\n\n  handleInputChange(event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  loginHandler() {\n    let body = JSON.stringify(this.state);\n    axios({\n      method: 'post',\n      url: 'http://localhost:8888/auth',\n      data: body\n    }).then(response => {\n      console.log(response);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  registerHandler() {}\n\n  renderInputs() {\n    return Object.keys(this.state.formControls).map(() => {\n      const control = this.state.formControls[controlName];\n      return React.createElement(Input, {\n        key: controlName,\n        type: control.type,\n        value: control.value,\n        valid: control.valid,\n        touched: control.touched,\n        label: control.label,\n        shouldValidate: !!control.validation,\n        errorMessage: control.errorMessage,\n        onChange: event => this.onChangeHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: classes.Auth,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"Authorization\"), React.createElement(\"form\", {\n      onSubmit: this.submitHandler,\n      className: classes.AuthForm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, this.renderInputs(), React.createElement(Button, {\n      label: \"Login\",\n      handleClick: this.loginHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }), React.createElement(Button, {\n      label: \"Registration\",\n      handleClick: this.registerHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }), this.state.response)));\n  }\n\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    auth: (email, password, isLogin) => dispatch(auth(email, password, isLogin))\n  };\n}\n\nexport default connect(null, mapDispatchToProps)(Auth);","map":{"version":3,"sources":["/home/gleban/WORKS/messnger_project/client/src/containers/Auth/Auth.js"],"names":["React","Component","Button","Input","axios","connect","auth","classes","Auth","state","formControls","email","value","type","label","errorMessage","valid","touched","validation","required","password","minLength","config","handleInputChange","bind","loginHandler","registerHandler","submitHandler","event","preventDefault","onChangeHandler","target","name","setState","body","JSON","stringify","method","url","data","then","response","console","log","catch","error","renderInputs","Object","keys","map","control","controlName","render","AuthForm","mapDispatchToProps","dispatch","isLogin"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport Button from '../../component/Button/Button'\nimport Input from '../../component/Input/Input'\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport {auth} from  '../../store/actions/auth'\n\nimport classes from './auth.module.css'\n\nclass Auth extends Component {\n\n  state = {\n    formControls: {\n        email: {\n          value: '',\n          type: 'email',\n          label: 'Email',\n          errorMessage: 'Input correct email',\n          valid: false,\n          touched: false,\n          validation: {\n            required: true,\n            email: true\n          }\n        },\n        password: {\n          value: '',\n          type: password,\n          label: \"Password\",\n          errorMessage: 'Inputcorrect password',\n          valid: false,\n          touched: false,\n          validation: {\n            required: true,\n            minLength: 6\n          }\n\n        }\n    }\n  };\n  config = {\n    'Accept': 'application/json',\n    'Content-Type': 'application/json',\n  }\n  handleInputChange = this.handleInputChange.bind(this);\n  loginHandler = this.loginHandler.bind(this);\n  registerHandler = this.registerHandler.bind(this);\n\n    \n  handleInputChange(event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n\n    this.setState({\n      [name]: value\n    });\n  }\n\n  loginHandler() {    \n    let body = JSON.stringify(this.state);\n\n    axios({\n        method: 'post',\n        url: 'http://localhost:8888/auth',\n        data: body,\n        \n    }).then((response) => {\n      console.log(response);\n    })\n    .catch(function (error) {\n      console.log(error);\n    });\n  }\n  registerHandler() {\n\n  }\n  \n  submitHandler = event => {\n    event.preventDefault()\n  }\n  onChangeHandler = () => {\n\n  }\n\n  renderInputs() {\n    return Object.keys(this.state.formControls).map(() => {\n      const control = this.state.formControls[controlName]\n      return (\n        <Input \n          key={controlName}\n          type={control.type}\n          value={control.value}\n          valid={control.valid}\n          touched={control.touched}\n          label= {control.label}\n          shouldValidate={!!control.validation}\n          errorMessage={control.errorMessage}\n          onChange={event => this.onChangeHandler}\n        />\n      )\n    })\n  }\n\n  render() {\n\n    return (\n      <div className={classes.Auth}>\n        <div>\n          <h1>Authorization</h1>\n            <form onSubmit={this.submitHandler} className={classes.AuthForm}>\n\n              {this.renderInputs() }    \n                \n              <Button label={\"Login\"} handleClick={this.loginHandler}/>\n              <Button label={\"Registration\"} handleClick={this.registerHandler}/>\n              \n              {this.state.response}\n\n            </form>\n        </div>\n      </div>\n    );\n  }\n}\nfunction mapDispatchToProps(dispatch) {\n  return { \n    auth: (email, password, isLogin) => dispatch(auth(email, password, isLogin))\n  }\n}\n\nexport default connect(null, mapDispatchToProps)(Auth);"]},"metadata":{},"sourceType":"module"}