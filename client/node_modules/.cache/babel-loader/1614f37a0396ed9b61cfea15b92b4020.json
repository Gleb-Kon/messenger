{"ast":null,"code":"import _objectSpread from \"/home/gleban/WORKS/messnger_project/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/home/gleban/WORKS/messnger_project/client/src/containers/Auth/Auth.js\";\nimport React, { Component } from 'react';\nimport Button from '../../component/Button/Button';\nimport Input from '../../component/Input/Input';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport { auth } from '../../store/actions/auth';\nimport is from 'is_js';\nimport classes from './auth.module.css';\n\nclass Auth extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      formControls: {\n        email: {\n          value: '',\n          type: 'email',\n          label: 'Email',\n          errorMessage: 'Input correct email',\n          valid: false,\n          touched: false,\n          validation: {\n            required: true,\n            email: true\n          }\n        },\n        password: {\n          value: '',\n          type: \"password\",\n          label: \"Password\",\n          errorMessage: 'Inputcorrect password',\n          valid: false,\n          touched: false,\n          validation: {\n            required: true,\n            minLength: 6\n          }\n        }\n      }\n    };\n    this.config = {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    };\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.loginHandler = this.loginHandler.bind(this);\n    this.registerHandler = this.registerHandler.bind(this);\n\n    this.submitHandler = event => {\n      event.preventDefault();\n    };\n\n    this.onChangeHandler = (event, controlName) => {\n      console.log(`${controlName}:`, event.target.value);\n\n      const formsControls = _objectSpread({}, this.state.formControls);\n\n      const control = _objectSpread({}, formsControls[controlName]);\n\n      control.value = event.target.value;\n      control.touched = true;\n      control.valid = this.validateControl(control.value, control.validation);\n      formsControls[controlName] = control;\n      this.setState({\n        formsControls\n      });\n    };\n  }\n\n  handleInputChange(event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  loginHandler() {\n    let body = JSON.stringify(this.state);\n    axios({\n      method: 'post',\n      url: 'http://localhost:8888/auth',\n      data: body\n    }).then(response => {\n      console.log(response);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  registerHandler() {}\n\n  validateControl(value, validation) {\n    if (!validation) {\n      return true;\n    }\n\n    let isValid = true;\n\n    if (validation.required) {\n      isValid = value.trim() !== '' && isValid;\n    }\n\n    if (validation.email) {\n      isValid = is.email(value) && isValid;\n    }\n\n    if (validation.minLength) {\n      isValid = value.length >= validation.minLength && isValid;\n    }\n\n    return isValid;\n  }\n\n  renderInputs() {\n    return Object.keys(this.state.formControls).map((controlName, index) => {\n      const control = this.state.formControls[controlName];\n      return React.createElement(Input, {\n        key: controlName + index,\n        type: control.type,\n        value: control.value,\n        valid: control.valid,\n        touched: control.touched,\n        label: control.label,\n        shouldValidate: !!control.validation,\n        errorMessage: control.errorMessage,\n        onChange: event => this.onChangeHandler(event, controlName),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: classes.Auth,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, \"Authorization\"), React.createElement(\"form\", {\n      onSubmit: this.submitHandler,\n      className: classes.AuthForm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, this.renderInputs(), React.createElement(Button, {\n      label: \"Login\",\n      handleClick: this.loginHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }), React.createElement(Button, {\n      label: \"Registration\",\n      handleClick: this.registerHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    auth: (email, password, isLogin) => dispatch(auth(email, password, isLogin))\n  };\n}\n\nexport default connect(null, mapDispatchToProps)(Auth);","map":{"version":3,"sources":["/home/gleban/WORKS/messnger_project/client/src/containers/Auth/Auth.js"],"names":["React","Component","Button","Input","axios","connect","auth","is","classes","Auth","state","formControls","email","value","type","label","errorMessage","valid","touched","validation","required","password","minLength","config","handleInputChange","bind","loginHandler","registerHandler","submitHandler","event","preventDefault","onChangeHandler","controlName","console","log","target","formsControls","control","validateControl","setState","name","body","JSON","stringify","method","url","data","then","response","catch","error","isValid","trim","length","renderInputs","Object","keys","map","index","render","AuthForm","mapDispatchToProps","dispatch","isLogin"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport Button from '../../component/Button/Button'\nimport Input from '../../component/Input/Input'\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport {auth} from  '../../store/actions/auth'\nimport  is from 'is_js'\n\nimport classes from './auth.module.css'\n\nclass Auth extends Component {\n\n  state = {\n    formControls: {\n        email: {\n          value: '',\n          type: 'email',\n          label: 'Email',\n          errorMessage: 'Input correct email',\n          valid: false,\n          touched: false,\n          validation: {\n            required: true,\n            email: true\n          }\n        },\n        password: {\n          value: '',\n          type: \"password\",\n          label: \"Password\",\n          errorMessage: 'Inputcorrect password',\n          valid: false,\n          touched: false,\n          validation: {\n            required: true,\n            minLength: 6\n          }\n\n        }\n    }\n  };\n  config = {\n    'Accept': 'application/json',\n    'Content-Type': 'application/json',\n  }\n  handleInputChange = this.handleInputChange.bind(this);\n  loginHandler = this.loginHandler.bind(this);\n  registerHandler = this.registerHandler.bind(this);\n\n    \n  handleInputChange(event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n\n    this.setState({\n      [name]: value\n    });\n  }\n\n  loginHandler() {    \n    let body = JSON.stringify(this.state);\n\n    axios({\n        method: 'post',\n        url: 'http://localhost:8888/auth',\n        data: body,\n        \n    }).then((response) => {\n      console.log(response);\n    })\n    .catch(function (error) {\n      console.log(error);\n    });\n  }\n  registerHandler() {\n\n  }\n  \n  submitHandler = event => {\n    event.preventDefault()\n  }\n\n  validateControl(value, validation) {\n    if(!validation){\n      return true\n    }\n\n    let isValid = true\n\n    if(validation.required) {\n      isValid = value.trim() !== '' && isValid\n    }\n\n    if(validation.email) {\n      isValid = is.email(value) && isValid     \n    }\n\n    if(validation.minLength) {\n      isValid = value.length >= validation.minLength && isValid \n    }\n    return isValid\n  }\n\n\n  onChangeHandler = (event, controlName) => {\n    console.log(`${controlName}:`, event.target.value)\n\n    const formsControls = {...this.state.formControls}\n    const control = {...formsControls[controlName]}\n\n    control.value = event.target.value\n    control.touched = true\n    control.valid = this.validateControl(control.value, control.validation)\n  \n    formsControls[controlName] = control\n\n    this.setState({\n      formsControls\n    })\n  }\n\n\n  renderInputs() {\n    return Object.keys(this.state.formControls).map((controlName, index) => {\n      const control = this.state.formControls[controlName]\n      return (\n        <Input \n          key={controlName + index}\n          type={control.type}\n          value={control.value}\n          valid={control.valid}\n          touched={control.touched}\n          label= {control.label}\n          shouldValidate={!!control.validation}\n          errorMessage={control.errorMessage}\n          onChange={event => this.onChangeHandler(event, controlName)}\n        />\n      )\n    })\n  }\n\n  render() {\n\n    return (\n      <div className={classes.Auth}>\n        <div>\n          <h1>Authorization</h1>\n            <form onSubmit={this.submitHandler} className={classes.AuthForm}>\n\n              { this.renderInputs() }    \n                \n              <Button label={\"Login\"} handleClick={this.loginHandler}/>\n              <Button label={\"Registration\"} handleClick={this.registerHandler}/>\n              \n\n            </form>\n        </div>\n      </div>\n    );\n  }\n}\nfunction mapDispatchToProps(dispatch) {\n  return { \n    auth: (email, password, isLogin) => dispatch(auth(email, password, isLogin))\n  }\n}\n\nexport default connect(null, mapDispatchToProps)(Auth);"]},"metadata":{},"sourceType":"module"}