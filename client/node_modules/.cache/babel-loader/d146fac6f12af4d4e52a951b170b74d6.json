{"ast":null,"code":"import _objectSpread from \"/home/gleban/WORKS/messnger_project/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/home/gleban/WORKS/messnger_project/client/src/containers/Auth/Auth.js\";\nimport React, { Component } from 'react';\nimport Button from '../../component/Button/Button';\nimport Input from '../../component/Input/Input';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport { auth } from '../../store/actions/auth';\nimport is from 'is_js';\nimport classes from './auth.module.css';\n\nclass Auth extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      formControls: {\n        email: {\n          value: '',\n          type: 'email',\n          label: 'Email',\n          errorMessage: 'Input correct email',\n          valid: false,\n          touched: false,\n          validation: {\n            required: true,\n            email: true\n          }\n        },\n        password: {\n          value: '',\n          type: \"password\",\n          label: \"Password\",\n          errorMessage: 'Inputcorrect password',\n          valid: false,\n          touched: false,\n          validation: {\n            required: true,\n            minLength: 6\n          }\n        }\n      }\n    };\n    this.config = {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    };\n\n    this.submitHandler = event => {\n      event.preventDefault();\n    };\n\n    this.onChangeHandler = (event, controlName) => {\n      console.log(`${controlName}:`, event.target.value);\n\n      const formControls = _objectSpread({}, this.state.formControls);\n\n      const control = _objectSpread({}, formControls[controlName]);\n\n      control.value = event.target.value;\n      control.touched = true;\n      control.valid = this.validateControl(control.value, control.validation);\n      formControls[controlName] = control;\n      console.log(formControls);\n      this.setState({\n        formControls\n      });\n    };\n  }\n\n  validateControl(value, validation) {\n    if (!validation) {\n      return true;\n    }\n\n    let isValid = true;\n\n    if (validation.required) {\n      isValid = value.trim() !== '' && isValid;\n    }\n\n    if (validation.email) {\n      isValid = is.email(value) && isValid;\n    }\n\n    if (validation.minLength) {\n      isValid = value.length >= validation.minLength && isValid;\n    }\n\n    return isValid;\n  }\n\n  renderInputs() {\n    return Object.keys(this.state.formControls).map((controlName, index) => {\n      const control = this.state.formControls[controlName];\n      return React.createElement(Input, {\n        key: controlName + index,\n        type: control.type,\n        value: control.value,\n        valid: control.valid,\n        touched: control.touched,\n        label: control.label,\n        shouldValidate: !!control.validation,\n        errorMessage: control.errorMessage,\n        onChange: event => this.onChangeHandler(event, controlName),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: classes.Auth,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, \"Authorization\"), React.createElement(\"form\", {\n      onSubmit: this.submitHandler,\n      className: classes.AuthForm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, this.renderInputs(), React.createElement(Button, {\n      label: \"Login\",\n      handleClick: this.loginHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }), React.createElement(Button, {\n      label: \"Registration\",\n      handleClick: this.registerHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    auth: (email, password, isLogin) => dispatch(auth(email, password, isLogin))\n  };\n}\n\nexport default connect(null, mapDispatchToProps)(Auth);","map":{"version":3,"sources":["/home/gleban/WORKS/messnger_project/client/src/containers/Auth/Auth.js"],"names":["React","Component","Button","Input","axios","connect","auth","is","classes","Auth","state","formControls","email","value","type","label","errorMessage","valid","touched","validation","required","password","minLength","config","submitHandler","event","preventDefault","onChangeHandler","controlName","console","log","target","control","validateControl","setState","isValid","trim","length","renderInputs","Object","keys","map","index","render","AuthForm","loginHandler","registerHandler","mapDispatchToProps","dispatch","isLogin"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport Button from '../../component/Button/Button'\nimport Input from '../../component/Input/Input'\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport {auth} from  '../../store/actions/auth'\nimport  is from 'is_js'\n\nimport classes from './auth.module.css'\n\nclass Auth extends Component {\n\n  state = {\n    formControls: {\n      email: {\n        value: '',\n        type: 'email',\n        label: 'Email',\n        errorMessage: 'Input correct email',\n        valid: false,\n        touched: false,\n        validation: {\n          required: true,\n          email: true\n        }\n      },\n      password: {\n        value: '',\n        type: \"password\",\n        label: \"Password\",\n        errorMessage: 'Inputcorrect password',\n        valid: false,\n        touched: false,\n        validation: {\n          required: true,\n          minLength: 6\n        }\n\n      }\n    }\n  };\n  config = {\n    'Accept': 'application/json',\n    'Content-Type': 'application/json',\n  }\n  \n  // loginHandler() {    \n  //   let body = JSON.stringify(this.state);\n\n  //   axios({\n  //       method: 'post',\n  //       url: 'http://localhost:8888/auth',\n  //       data: body,\n        \n  //   }).then((response) => {\n  //     console.log(response);\n  //   })\n  //   .catch(function (error) {\n  //     console.log(error);\n  //   });\n  // }\n  // registerHandler() {\n\n  // }\n  \n  submitHandler = event => {\n    event.preventDefault()\n  }\n\n \n\n  onChangeHandler = (event, controlName) => {\n    console.log(`${controlName}:`, event.target.value)\n\n    const formControls = {...this.state.formControls}\n    const control = {...formControls[controlName]}\n\n    control.value = event.target.value\n    control.touched = true\n    control.valid = this.validateControl(control.value, control.validation)\n  \n\n\n    formControls[controlName] = control\n    console.log(formControls);\n    \n    this.setState({\n      formControls\n    })\n\n   \n  }\n  validateControl(value, validation) {\n    if(!validation){\n      return true\n    }\n\n    let isValid = true\n\n    if(validation.required) {\n      isValid = value.trim() !== '' && isValid\n    }\n\n    if(validation.email) {\n      isValid = is.email(value) && isValid     \n    }\n\n    if(validation.minLength) {\n      isValid = value.length >= validation.minLength && isValid \n    }\n    return isValid;\n  }\n\n\n\n  renderInputs() {\n    return Object.keys(this.state.formControls).map((controlName, index) => {\n      const control = this.state.formControls[controlName]\n      return (\n        <Input \n          key={controlName + index}\n          type={control.type}\n          value={control.value}\n          valid={control.valid}\n          touched={control.touched}\n          label= {control.label}\n          shouldValidate={!!control.validation}\n          errorMessage={control.errorMessage}\n          onChange={event => this.onChangeHandler(event, controlName)}\n        />\n      )\n    })\n  }\n\n  render() {\n\n    return (\n      <div className={classes.Auth}>\n        <div>\n          <h1>Authorization</h1>\n            <form onSubmit={this.submitHandler} className={classes.AuthForm}>\n\n              { this.renderInputs() }    \n                \n              <Button label={\"Login\"} handleClick={this.loginHandler}/>\n              <Button label={\"Registration\"} handleClick={this.registerHandler}/>\n              \n\n            </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return { \n    auth: (email, password, isLogin) => dispatch(auth(email, password, isLogin))\n  }\n}\n\nexport default connect(null, mapDispatchToProps)(Auth);"]},"metadata":{},"sourceType":"module"}