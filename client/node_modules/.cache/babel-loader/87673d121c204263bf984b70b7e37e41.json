{"ast":null,"code":"var _jsxFileName = \"/home/gleban/WORKS/messnger_project/client/src/App.js\";\nimport React, { Component } from 'react';\nimport { Route, Switch, Redirect, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Layout from './hoc/Layout/Layout';\nimport Auth from './containers/Auth/Auth';\nimport HomePage from './containers/HomePage/HomePage';\nimport MyFriends from './containers/MyFriends/MyFriends';\nimport MyMessages from './containers/MyMessages/MyMessages';\nimport Logout from './component/Logout/Logout'; //import autoLogin from './store/actions/auth'\n\nimport './App.css';\n\nclass App extends Component {\n  // componentDidMount() {\n  //   this.props.authLogin()\n  // }\n  render() {\n    let routes = React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(Route, {\n      path: \"/auth\",\n      component: Auth,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }), React.createElement(Redirect, {\n      to: \"/auth\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }));\n\n    if (this.props.isAuthenticated) {\n      routes = React.createElement(Switch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(Route, {\n        path: \"/\",\n        exact: \"true\",\n        component: HomePage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/my_messages\",\n        component: MyMessages,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/my_friends\",\n        component: MyFriends,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/logout\",\n        component: Logout,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }), React.createElement(Redirect, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }));\n    }\n\n    return React.createElement(Layout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, routes);\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  console.log(!!state.auth.token);\n  return {\n    isAuthenticated: !!state.auth.token\n  };\n} // function mapDispatchToProps(dispath){\n//   return {\n//     autoLogin: () => dispatch(autoLogin())\n//   }\n// }\n\n\nexport default withRouter(connect(mapStateToProps)(App));","map":{"version":3,"sources":["/home/gleban/WORKS/messnger_project/client/src/App.js"],"names":["React","Component","Route","Switch","Redirect","withRouter","connect","Layout","Auth","HomePage","MyFriends","MyMessages","Logout","App","render","routes","props","isAuthenticated","mapStateToProps","state","console","log","auth","token"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,QAAxB,EAAkCC,UAAlC,QAAmD,kBAAnD;AACA,SAASC,OAAT,QAAwB,aAAxB;AAGA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,QAAP,MAAqB,gCAArB;AACA,OAAOC,SAAP,MAAsB,kCAAtB;AACA,OAAOC,UAAP,MAAuB,oCAAvB;AACA,OAAOC,MAAP,MAAmB,2BAAnB,C,CACA;;AAEA,OAAO,WAAP;;AAEA,MAAMC,GAAN,SAAkBZ,SAAlB,CAA4B;AAE1B;AACA;AACA;AAGAa,EAAAA,MAAM,GAAG;AAEP,QAAIC,MAAM,GACR,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,SAAS,EAAEP,IAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;;AAMA,QAAI,KAAKQ,KAAL,CAAWC,eAAf,EAAgC;AAC9BF,MAAAA,MAAM,GACJ,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,GAAZ;AAAgB,QAAA,KAAK,EAAC,MAAtB;AAA6B,QAAA,SAAS,EAAEN,QAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,cAAZ;AAA2B,QAAA,SAAS,EAAEE,UAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAGE,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,aAAZ;AAA0B,QAAA,SAAS,EAAED,SAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,EAIE,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,SAAZ;AAAsB,QAAA,SAAS,EAAEE,MAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,EAKE,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALF,CADF;AASD;;AAED,WACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGG,MADH,CADF;AAKD;;AAhCyB;;AAoC5B,SAASG,eAAT,CAAyBC,KAAzB,EAAgC;AAC9BC,EAAAA,OAAO,CAACC,GAAR,CAAY,CAAC,CAACF,KAAK,CAACG,IAAN,CAAWC,KAAzB;AACA,SAAO;AACLN,IAAAA,eAAe,EAAE,CAAC,CAACE,KAAK,CAACG,IAAN,CAAWC;AADzB,GAAP;AAGD,C,CAED;AACA;AACA;AACA;AACA;;;AAGA,eAAelB,UAAU,CAACC,OAAO,CAACY,eAAD,CAAP,CAAyBL,GAAzB,CAAD,CAAzB","sourcesContent":["import React, { Component } from 'react';\nimport { Route, Switch, Redirect, withRouter} from 'react-router-dom'\nimport { connect } from 'react-redux';\n\n\nimport Layout from './hoc/Layout/Layout'\nimport Auth from './containers/Auth/Auth'\nimport HomePage from './containers/HomePage/HomePage'\nimport MyFriends from './containers/MyFriends/MyFriends'\nimport MyMessages from './containers/MyMessages/MyMessages';\nimport Logout from './component/Logout/Logout';\n//import autoLogin from './store/actions/auth'\n\nimport './App.css';\n\nclass App extends Component {\n\n  // componentDidMount() {\n  //   this.props.authLogin()\n  // }\n\n\n  render() {\n  \n    let routes = (\n      <Switch>\n        <Route path=\"/auth\" component={Auth}/>\n        <Redirect to=\"/auth\" />\n      </Switch>\n    )\n    if (this.props.isAuthenticated) {\n      routes = (\n        <Switch>\n          <Route path=\"/\" exact=\"true\" component={HomePage}/>\n          <Route path=\"/my_messages\" component={MyMessages}/> \n          <Route path=\"/my_friends\" component={MyFriends}/> \n          <Route path=\"/logout\" component={Logout}/>\n          <Redirect to=\"/\" />\n        </Switch>\n      )\n    } \n\n    return (\n      <Layout>\n        {routes}    \n      </Layout>  \n    );\n  }\n\n} \n\nfunction mapStateToProps(state) {\n  console.log(!!state.auth.token)\n  return {\n    isAuthenticated: !!state.auth.token\n  }\n}\n\n// function mapDispatchToProps(dispath){\n//   return {\n//     autoLogin: () => dispatch(autoLogin())\n//   }\n// }\n\n\nexport default withRouter(connect(mapStateToProps)(App));\n"]},"metadata":{},"sourceType":"module"}