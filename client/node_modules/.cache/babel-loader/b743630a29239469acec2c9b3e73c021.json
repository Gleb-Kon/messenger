{"ast":null,"code":"var _jsxFileName = \"/home/gleban/WORKS/messnger_project/client/src/containers/HomePage/HomePage.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport socketIOClient from \"socket.io-client\";\nimport getDataUser from '../../store/actions/getDataUser';\nimport getAllUsers from '../../store/actions/getAllUsers';\nimport connectToSocket from '../../store/actions/connectToSocket';\nimport MainFunctionBar from '../../component/MainFunctionBar/MainFunctionBar';\nimport classes from './HomePage.module.css';\nimport Button from '../../component/Button/Button';\nimport Input from '../../component/Input/Input';\n\nclass HomePage extends Component {\n  constructor(props) {\n    super(props);\n    this.connectRoom = this.connectRoom.bind(this);\n    this.sendMessage = this.sendMessage.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.getDataUser();\n    this.props.getAllUsers();\n    this.props.connectToSocket();\n    console.log(this.props.loading);\n  }\n\n  renderUsers() {\n    return this.props.users.map(user => {\n      return React.createElement(\"li\", {\n        key: user.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, user.email, React.createElement(Button, {\n        onClick: this.connectRoom,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, \"\\u041D\\u0430\\u043F\\u0438\\u0441\\u0430\\u0442\\u044C\"), React.createElement(Button, {\n        onClick: this.sendMessage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C\"));\n    });\n  }\n\n  connectRoom() {\n    this.props.socket.emit('join', {\n      email: this.props.email\n    });\n  }\n\n  sendMessage() {\n    console.log(\"send\");\n    this.props.socket.emit('message', \"Сообщение от \" + this.props.email);\n  }\n\n  render() {\n    console.log(this.props.email);\n    console.log(this.props.loading);\n\n    if (this.props.loadingData && this.props.loadingUsers) {\n      return React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \"\\u0437\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430\");\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.leftSideBar,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(MainFunctionBar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        color: \"#ffffff\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, \"\\u0412\\u044B \\u0432\\u043E\\u0448\\u043B\\u0438 \\u043A\\u0430\\u043A: \", this.props.email, \" \"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        color: \"#ffffff\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"\\u0412\\u0430\\u0448 id: \", this.props.id), React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \"\\u0423\\u0436\\u0435 \\u0437\\u0430\\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0438\\u0440\\u043E\\u0432\\u0430\\u043B\\u0438\\u0441\\u044C!!!\"), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, this.renderUsers()))));\n    }\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    id: state.getDataUser.id,\n    email: state.getDataUser.email,\n    loadingData: state.getDataUser.loading,\n    users: state.getAllUsers.users,\n    loadingUsers: state.getAllUsers.loading,\n    socket: state.connectToSocket.socket\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    getDataUser: () => dispatch(getDataUser()),\n    getAllUsers: () => dispatch(getAllUsers()),\n    connectToSocket: () => dispatch(connectToSocket())\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePage);","map":{"version":3,"sources":["/home/gleban/WORKS/messnger_project/client/src/containers/HomePage/HomePage.js"],"names":["React","Component","connect","socketIOClient","getDataUser","getAllUsers","connectToSocket","MainFunctionBar","classes","Button","Input","HomePage","constructor","props","connectRoom","bind","sendMessage","componentDidMount","console","log","loading","renderUsers","users","map","user","id","email","socket","emit","render","loadingData","loadingUsers","leftSideBar","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport { connect } from 'react-redux';\n\nimport socketIOClient from \"socket.io-client\";\nimport getDataUser from  '../../store/actions/getDataUser'\nimport getAllUsers from  '../../store/actions/getAllUsers'\nimport connectToSocket from  '../../store/actions/connectToSocket'\nimport MainFunctionBar from '../../component/MainFunctionBar/MainFunctionBar'\nimport classes from './HomePage.module.css'\nimport Button from '../../component/Button/Button'\nimport Input from '../../component/Input/Input'\n\nclass HomePage extends Component {\n    constructor(props) {\n        super(props);\n        this.connectRoom = this.connectRoom.bind(this);\n        this.sendMessage = this.sendMessage.bind(this);\n    }\n      \n    componentDidMount(){\n        this.props.getDataUser();\n        this.props.getAllUsers();\n        this.props.connectToSocket();\n\n        console.log(this.props.loading)\n        \n    }\n    renderUsers() {\n        return this.props.users.map(user => {\n            return(\n                <li key={user.id}>{user.email}\n                <Button\n                    onClick={this.connectRoom}\n                    >\n                Написать\n                </Button>\n                <Button\n                    onClick={this.sendMessage}\n                >\n                Отправить\n                </Button>\n                </li>\n            )\n        })\n        \n        \n    }\n    connectRoom() {\n        this.props.socket.emit('join', {email: this.props.email});\n    }\n    sendMessage() {\n        console.log(\"send\")\n        this.props.socket.emit('message', \"Сообщение от \" + this.props.email)\n    }\n    \n    render() {\n        console.log(this.props.email)\n\n        console.log(this.props.loading)\n        if(this.props.loadingData && this.props.loadingUsers) {\n            return (<h1>загрузка</h1>)\n        }\n        else{\n        return(\n            <div>\n                <div>\n                    <div className={classes.leftSideBar}>\n                        <MainFunctionBar/>\n                    </div >\n                    <div>\n                    <span color=\"#ffffff\">Вы вошли как: {this.props.email} </span><br/>\n                    <span color=\"#ffffff\">Ваш id: {this.props.id}</span>\n                    <h1>Уже зарегистрировались!!!</h1>\n                    <ul>{this.renderUsers()}</ul>\n\n                    </div>  \n                </div>\n            </div>\n        )\n    }\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        id: state.getDataUser.id,\n        email: state.getDataUser.email,\n        loadingData: state.getDataUser.loading,\n\n        users: state.getAllUsers.users,\n        loadingUsers: state.getAllUsers.loading,\n\n        socket: state.connectToSocket.socket\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return { \n      getDataUser: () => dispatch(getDataUser()),\n      getAllUsers: () => dispatch(getAllUsers()),\n      connectToSocket: () => dispatch(connectToSocket())\n    }\n}\n  \nexport default connect(mapStateToProps, mapDispatchToProps)(HomePage);\n"]},"metadata":{},"sourceType":"module"}